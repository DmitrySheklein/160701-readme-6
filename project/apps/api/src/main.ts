/**
 * This is not a production server yet!
 * This is only a minimal backend to get started.
 */

import { Logger, ValidationPipe } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';

import { AppModule } from './app/app.module';
import { AuthKeyName, attachSwagger } from '@project/shared/helpers';
import { DocumentBuilder } from '@nestjs/swagger';
import { ConfigService } from '@nestjs/config';
import { RequestIdInterceptor } from '@project/interceptors';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  const globalPrefix = 'api';
  app.setGlobalPrefix(globalPrefix);
  app.useGlobalInterceptors(new RequestIdInterceptor());
  app.useGlobalPipes(
    new ValidationPipe({
      transform: true,
    })
  );

  attachSwagger({
    app,
    DocumentBuilder: new DocumentBuilder()
      .setTitle('The ¬´API Gateway¬ª service')
      .setDescription('¬´API Gateway¬ª service API')
      .setVersion('1.0')
      .addTag('auth', '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
      .addTag('posts', '–ü—É–±–ª–∏–∫–∞—Ü–∏–∏')
      .addTag('likes', '–õ–∞–π–∫–∏')
      .addTag('comments', '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏')
      .addTag('tags', '–¢–µ–≥–∏')
      .addBearerAuth(
        {
          name: 'Authorization',
          bearerFormat: 'Bearer',
          scheme: 'Bearer',
          type: 'http',
          in: 'Header',
        },
        AuthKeyName
      ),
    swaggerCustomOptions: {
      customSiteTitle: '[API Gateway] Swagger UI',
    },
  });

  const configService = app.get(ConfigService);
  const port = configService.get('application.port');
  await app.listen(port);
  Logger.log(
    `üöÄ Application is running on: http://localhost:${port}/${globalPrefix}`
  );
}

bootstrap();
